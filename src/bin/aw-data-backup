#!/bin/bash

# assume we run as root
[[ "$(id -u)" != 0 ]] && { echo must run as root ; exit 1 ; }

wrktree=/var/git/non-bare/server-data-backup.git



###
## System
###

syswrk="$wrktree"/system
! [[ -d "$syswrk" ]] && mkdir "$syswrk"

rsync -qa --delete /etc /var/spool/cron "$syswrk"

rsync -qa /var/log/pacman.log "$syswrk"



###
## Git
###

gitwrk="$wrktree"/git

! [[ -d "$gitwrk" ]] && mkdir "$gitwrk"

rsync -qa ~git/.gitolite.rc "$gitwrk"/gitolite.rc

rsync -qa --delete ~git/.gitolite/logs/ "$gitwrk"/gitolite.logs

rsync -qa --delete ~git/.ssh/ "$gitwrk"/ssh



###
## Redmine
###

redmine_root=/srv/http/redmine.archwomen.org
rmdbyml="$redmine_root"/config/database.yml

rmwrk="$wrktree"/redmine
! [[ -d "$rmwrk" ]] && mkdir "$rmwrk"

## MySQL dump
#  http://www.thegeekstuff.com/2008/09/backup-and-restore-mysql-database-using-mysqldump/

# get user, db and pwd

rmdb_user="`awk '/^production:/ {foo=1} /^ *username:/ {if (foo) { print $2 ; exit } }' < "$rmdbyml"`"

rmdb_pwd="`awk '/^production:/ {foo=1} /^ *password:/ {if (foo) { print ; exit } }' < "$rmdbyml" | sed -e 's,^ *[^ ]*: \(.*\)$,\1,' -e 's,"\(.*\)",\1,'`"

rmdb="`awk '/^production:/ {foo=1} /^ *database:/ {if (foo) { print $2 ; exit } }' < "$rmdbyml"`"

# do the dump
mysqldump -u "$rmdb_user" -p"$rmdb_pwd" "$rmdb" > "$rmwrk"/redmine_db.sql
# restore with
#  mysql -u "$rmdb_user" -p"$rmdb_pwd" "$rmdb" < "$rmwrk"/redmine_db.sql

## Logs and Files

rsync -qa "$redmine_root"/{log,files,Gemfile.lock,db/schema.rb} "$rmwrk"



###
## Git
###

# these must be set
#  - config user.name
#  - config user.email
#  - private key <=> public key in gitolite-admin
#  - remote named gitolite

chown -R git:git "$wrktree" # change ownership for everything
cd "$wrktree"

# add and commit
sudo -u git git add -A
sudo -u git git commit -q -m "automatic backup"

# clean up and compress
git gc --auto --quiet

# push
sudo -u git git push -q gitolite master

# fin
